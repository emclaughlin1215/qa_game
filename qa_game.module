<?php

/**
 * Implements hook_init().
 */
function qa_game_init() {
  drupal_add_js(drupal_get_path('module', 'qa_game') . '/js/all.js');
  drupal_add_css(drupal_get_path('module', 'qa_game') . '/css/all.css');
}

/**
 * Implements hook_permission().
 */
function qa_game_permission() {
  return array(
    'play qa game' => array(
      'title' => t('Play the QA Game'),
      'description' => t('Modify and play the QA game for projects they are on.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function qa_game_menu() {
  return array(
    'qa-game' => array(
      'type' => MENU_CALLBACK,
      'title' => 'QA Game',
      'page callback' => 'qa_game_choose_game',
      'access arguments' => array('play qa game'),
    ),
    'level' => array(
      'type' => MENU_CALLBACK,
      'title' => 'Level',
      'page callback' => 'qa_game_level',
      'access arguments' => array('play qa game'),
    ),
  );
}

/**
 * Helper function to display the choices the user has for the QA game.
 */
function qa_game_choose_game() {
  global $user;

  $results[] = db_select('field_data_field_qa_game_backend_ninja', 'bn')
    ->fields('bn', array('entity_id'))
    ->condition('bn.field_qa_game_backend_ninja_target_id', $user->uid, '=')
    ->execute();
  $results[] = db_select('field_data_field_qa_game_creative_wizard', 'cw')
    ->fields('cw', array('entity_id'))
    ->condition('cw.field_qa_game_creative_wizard_target_id', $user->uid, '=')
    ->execute();
  $results[] = db_select('field_data_field_qa_game_frontend_fighter', 'ff')
    ->fields('ff', array('entity_id'))
    ->condition('ff.field_qa_game_frontend_fighter_target_id', $user->uid, '=')
    ->execute();
  $results[] = db_select('field_data_field_qa_game_marketing_plumber', 'mp')
    ->fields('mp', array('entity_id'))
    ->condition('mp.field_qa_game_marketing_plumber_target_id', $user->uid, '=')
    ->execute();
  $results[] = db_select('field_data_field_qa_game_princess_cs', 'pc')
    ->fields('pc', array('entity_id'))
    ->condition('pc.field_qa_game_princess_cs_target_id', $user->uid, '=')
    ->execute();
  $results[] = db_select('field_data_field_qa_game_pm_ranger', 'pm')
    ->fields('pm', array('entity_id'))
    ->condition('pm.field_qa_game_pm_ranger_target_id', $user->uid, '=')
    ->execute();

  $nodes = array();
  foreach ($results as $result) {
    if ($result->rowCount() > 0) {
      foreach ($result as $row) {
        $nodes[] = node_load($row->entity_id);
      }
    }
  }

  return theme('game_intro', array('nodes' => $nodes));
}

/**
 * Helper function to return level data.
 */
function qa_game_level() {
  $nid = check_plain($_GET['node']);
  $level = check_plain($_GET['level']);
  $node = node_load($nid);
  $class = '';

  switch($level) {
    case 1:
      $class = 'chrome';
      break;
    case 2:
      $class = 'firefox';
      break;
    case 3:
      $class = 'safari';
      break;
    case 4:
      $class = 'ie10';
      break;
    case 5:
      $class = 'ie9';
      break;
    case 6:
      $class = 'ie8';
      break;
    default:
      $class = 'finished';
      break;
  }

  if ($class == 'finished') {
    print theme ('winner', array());
  } else {
    print theme ('level', array('class' => $class, 'node' => $node, 'level' => $level));
  }
  exit();
}

/**
 * Implements hook_theme().
 */
function qa_game_theme() {
  return array(
    'game_intro' => array(
      'template' => 'templates/game_intro',
      'variables' => array(
        'nodes' => NULL,
      )
    ),
    'level' => array(
      'template' => 'templates/level',
      'variables' => array(
        'class' => NULL,
        'node' => NULL,
        'level' => NULL,
      )
    ),
    'winner' => array(
      'template' => 'templates/winner',
      'variables' => array()
    ),
  );
}